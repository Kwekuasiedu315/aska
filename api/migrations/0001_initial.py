# Generated by Django 4.1.4 on 2023-02-22 22:49

import api.managers
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("nickname", models.CharField(blank=True, max_length=20, null=True)),
                ("phone_number", models.CharField(max_length=20, unique=True)),
                ("first_name", models.CharField(max_length=50)),
                ("last_name", models.CharField(max_length=50)),
                ("middle_name", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female")], max_length=20
                    ),
                ),
                ("birthdate", models.DateField()),
                ("bio", models.TextField(blank=True, max_length=200, null=True)),
                (
                    "level",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("UPP", "Upper Primary"),
                            ("JHS", "Junior High"),
                            ("SHS", "Senior High"),
                        ],
                        max_length=100,
                    ),
                ),
                ("points", models.IntegerField(default=0)),
                (
                    "password_reset_code",
                    models.CharField(editable=False, max_length=100, null=True),
                ),
                (
                    "profile_picture",
                    models.ImageField(default="defaults/user.png", upload_to="users"),
                ),
                (
                    "cover_picture",
                    models.ImageField(default="defaults/cover.jpeg", upload_to="users"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", api.managers.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name="ContentStandard",
            fields=[
                (
                    "id",
                    models.CharField(
                        max_length=100, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("number", models.PositiveSmallIntegerField()),
                ("name", models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name="Curriculum",
            fields=[
                (
                    "id",
                    models.CharField(
                        editable=False,
                        max_length=100,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "grade",
                    models.CharField(
                        choices=[("B4", "B4"), ("B5", "B5"), ("B6", "B6")],
                        max_length=10,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="District",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "region",
                    models.CharField(
                        choices=[
                            ("ASH", "Ashanti Region"),
                            ("AHA", "Ahafo Region"),
                            ("BON", "Bono East Region"),
                            ("CEN", "Central Region"),
                            ("EAS", "Eastern Region"),
                            ("GRE", "Greater Accra Region"),
                            ("NTN", "Northern Region"),
                            ("NEA", "North East Region"),
                            ("SVA", "Savannah Region"),
                            ("UPW", "Upper West Region"),
                            ("WES", "Western Region"),
                            ("UPE", "Upper East Region"),
                            ("VOL", "Volta Region"),
                            ("WNO", "Western North Region"),
                            ("OTI", "Oti Region"),
                        ],
                        max_length=100,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LearningIndicator",
            fields=[
                (
                    "id",
                    models.CharField(
                        max_length=100, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("number", models.PositiveSmallIntegerField()),
                ("name", models.CharField(max_length=500)),
                (
                    "content_standard",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="learning_indicators",
                        to="api.contentstandard",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "question_type",
                    models.CharField(
                        choices=[
                            ("MC", "Multiple Choice"),
                            ("TF", "True or False"),
                            ("SA", "Short Answer"),
                        ],
                        max_length=100,
                    ),
                ),
                ("text", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="School",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("code", models.CharField(max_length=20, unique=True)),
                (
                    "owner",
                    models.CharField(
                        choices=[("PVT", "Private"), ("GOV", "Government")],
                        default="gov",
                        max_length=50,
                    ),
                ),
                ("email", models.EmailField(max_length=254, null=True)),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Mixed"), ("B", "Boys"), ("G", "Girls")],
                        max_length=100,
                    ),
                ),
                ("town", models.CharField(max_length=100)),
                (
                    "digital_address",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "location",
                    models.URLField(
                        blank=True, help_text="School location on google map", null=True
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("date_established", models.DateField(blank=True, null=True)),
                ("visible", models.BooleanField(default=False, editable=False)),
                (
                    "logo",
                    models.ImageField(
                        default="defaults/cover.jpeg", upload_to="school"
                    ),
                ),
                (
                    "added_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="schools_added",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "district",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.district"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Strand",
            fields=[
                (
                    "id",
                    models.CharField(
                        max_length=100, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("number", models.PositiveSmallIntegerField()),
                ("name", models.CharField(max_length=100)),
                (
                    "curriculum",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="strands",
                        to="api.curriculum",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Subject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Telephone",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("number", models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="SubStrand",
            fields=[
                (
                    "id",
                    models.CharField(
                        max_length=100, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("number", models.PositiveSmallIntegerField()),
                ("name", models.CharField(max_length=100)),
                (
                    "strand",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="substrands",
                        to="api.strand",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ShortAnswer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.CharField(max_length=255)),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.question"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SchoolPicture",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="school/images")),
                ("caption", models.CharField(max_length=225)),
                ("timestamp", models.DateTimeField(auto_now=True)),
                (
                    "school",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pictures",
                        to="api.school",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SchoolFeed",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField()),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="school/feeds"),
                ),
                ("timestamp", models.DateTimeField(auto_now=True)),
                (
                    "school",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feeds",
                        to="api.school",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="school",
            name="telephone",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="api.telephone",
            ),
        ),
        migrations.AddField(
            model_name="question",
            name="curriculum",
            field=models.ForeignKey(
                editable=False,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="questions",
                to="api.subject",
            ),
        ),
        migrations.AddField(
            model_name="question",
            name="lesson",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="questions",
                to="api.contentstandard",
            ),
        ),
        migrations.CreateModel(
            name="MultipleChoiceAnswer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.CharField(max_length=255)),
                ("is_correct", models.BooleanField(default=False)),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.question"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Lesson",
            fields=[
                (
                    "id",
                    models.CharField(
                        max_length=100, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("number", models.PositiveSmallIntegerField()),
                ("topic", models.CharField(max_length=1024)),
                ("content", models.TextField()),
                (
                    "content_standard",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lessons",
                        to="api.contentstandard",
                    ),
                ),
                (
                    "curriculum",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lessons",
                        to="api.curriculum",
                    ),
                ),
                (
                    "learning_indicator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lessons",
                        to="api.learningindicator",
                    ),
                ),
                (
                    "strand",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lessons",
                        to="api.strand",
                    ),
                ),
                (
                    "substrand",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lessons",
                        to="api.substrand",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Friendship",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("accepted", "Accepted"),
                            ("declined", "Declined"),
                        ],
                        default="pending",
                        max_length=10,
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "receiver",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_friend_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_friend_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EducationHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_started", models.DateField(blank=True, null=True)),
                ("date_completed", models.DateField(blank=True, null=True)),
                (
                    "school",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.school"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="education_history",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="curriculum",
            name="subject",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.subject"
            ),
        ),
        migrations.AddField(
            model_name="contentstandard",
            name="substrand",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="content_standards",
                to="api.substrand",
            ),
        ),
        migrations.AddField(
            model_name="customuser",
            name="school",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="api.school",
            ),
        ),
        migrations.AddField(
            model_name="customuser",
            name="subjects",
            field=models.ManyToManyField(
                blank=True, related_name="users", to="api.subject"
            ),
        ),
        migrations.AddField(
            model_name="customuser",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
    ]
